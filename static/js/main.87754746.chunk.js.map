{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AlternativeMessage","props","useState","title","setTitle","onMessageClick","addMessage","value","type","onChange","event","currentTarget","onKeyPress","e","charCode","onClick","Message","className","s","message","avatar","src","alt","angle","description","name","text","time","HW1","id","dialog","setDialog","messageElements","map","m","newMessage","Affair","items","affair","priority","deleteAffairCallback","_id","Affairs","mappedAffairs","data","a","key","difficulty","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnter","inputClass","onKeyDown","onBlur","disabled","GreetingContainer","users","addUserCallback","setName","alert","length","HW3","setUsers","user","v1","SuperInputText","onChangeText","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.87754746.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2BLEx\",\"avatar\":\"Message_avatar__3Y8vc\",\"description\":\"Message_description__3cvLT\",\"angle\":\"Message_angle__1JJU7\",\"name\":\"Message_name__3gXT6\",\"text\":\"Message_text__Kp1vt\",\"time\":\"Message_time__3Cvpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__3uHCM\",\"items\":\"Affairs_items__1C3wB\",\"difficulty\":\"Affairs_difficulty__3rCnX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input___HmGa\",\"superInput\":\"SuperInputText_superInput__2IZul\",\"errorInput\":\"SuperInputText_errorInput__9cHGE\",\"error\":\"SuperInputText_error__c7oKX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1qzZ0\",\"column\":\"HW4_column__2uy1y\",\"testSpanError\":\"HW4_testSpanError__3dtcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1DhPV\",\"red\":\"SuperButton_red__3RWyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2uvIT\",\"spanClassName\":\"SuperCheckbox_spanClassName__1O6TK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3qY4B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1Oh-W\",\"error\":\"Greeting_error__3chYN\"};","import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\n\n\ntype PropsType = {\n    addMessage: (title: string) => void\n}\n\nfunction AlternativeMessage(props: PropsType) {\n\n    const [title, setTitle] = useState('')\n    \n    const hendleOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setTitle(event.currentTarget.value)\n    }\n\n    const onMessageClick = () => {\n        props.addMessage(title)\n        setTitle('')\n    }\n\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.charCode === 13) {\n            onMessageClick()\n        }\n    }\n\n    return (\n        <div>\n            <input value={title} type='text'\n                onChange={hendleOnChange} \n                onKeyPress={onKeyPressHandler}\n                />\n            <button onClick={onMessageClick}>Send</button>\n        </div>\n    )\n}\n\nexport default AlternativeMessage\n","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessagePropsType = {\n    id: number\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.message}>\n            <img className={s.avatar} src={props.avatar} alt={'avatar'} />\n\n            <div className={s.angle} />\n\n            <div className={s.description}>\n                <div className={s.name}>{props.name}</div>\n                <div className={s.text}>{props.message}</div>\n                <div className={s.time}>{props.time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React, { useState } from 'react'\nimport AlternativeMessage from './AlternativeMessage'\nimport Message from './Message'\n\ntype MessageType = {\n    id: number\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\n\nfunction HW1() {\n\n    const [dialog, setDialog] = useState<Array<MessageType>>([\n        {\n            id: 1,\n            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n            name: 'Sasha', message: 'Hello, my friends', time: '22:00'\n        },\n        {\n            id: 2,\n            avatar: 'https://i.pinimg.com/564x/69/07/a3/6907a3ecd829ce41a9fee86479597a39.jpg',\n            name: 'Maksim', message: 'Hello, Sasha', time: '22:07'\n        },\n        {\n            id: 3,\n            avatar: 'https://i.pinimg.com/564x/56/2f/9c/562f9cbde8be047a6b3ca16927cbc75b.jpg',\n            name: 'Sonya', message: 'yo yo yo', time: '22:15'\n        }\n    ])\n\n    const addMessage = (title: string) => {\n        let newMessage: MessageType = {\n            id: 4, avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n            name: 'Sonya', message: title, time: '22:50'\n        }\n        setDialog([...dialog, newMessage])\n    }\n\n    let messageElements = dialog.map(m =>\n        <Message id={m.id} avatar={m.avatar} name={m.name} message={m.message} time={m.time} />\n    )\n\n\n    return (\n        <div>\n            <hr />\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            {messageElements}\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            <AlternativeMessage addMessage={addMessage} />\n            <hr />\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport { AffairType } from './HW2'\nimport s from './Affairs.module.css'\n\n\ntype AffairPropsType = {\n    affair: AffairType \n    deleteAffairCallback: (_id: number) => void \n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n         props.deleteAffairCallback(props.affair._id)\n    } \n    \n    return (\n        <div className={s.items}  >\n            <span>{props.affair.name}</span>\n            <span>{props.affair.priority}</span>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport { AffairType, FilterType } from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { \n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair \n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n\n\n    return (\n        <div className={s.difficulty }>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}> All</button>\n            <button onClick={setHigh}> High</button>\n            <button onClick={setMiddle}> Middle</button>\n            <button onClick={setLow}> Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\nexport type AffairPriorityType = 'high' | 'low' | 'middle' \n\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: FilterType\n} \nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ \n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType):  AffairType[] => { \n    if (filter === 'all') return affairs\n    else if (filter === 'high') return affairs.filter( a => a.priority === 'high')\n    else if (filter === 'middle') return affairs.filter( a => a.priority === 'middle')\n    else if (filter === 'low') return affairs.filter( a => a.priority === 'low')\n    else return affairs\n    // else return affairs.filter(a => a.priority === filter)\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { \n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) \n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) \n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, { ChangeEvent, KeyboardEvent } from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    { name, setNameCallback, addUser, error, totalUsers, onEnter } // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : '' // need to fix with (?:)\n\n\n\n    return (\n        <div>\n            <input\n                value={name}\n                onChange={setNameCallback}\n                className={inputClass}\n                onKeyDown={onEnter}\n                onBlur={setNameCallback}\n            />\n            <span>{error}</span>\n            <button onClick={addUser} disabled={!name}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\nimport Greeting from './Greeting'\nimport { UserType } from './HW3'\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value) // need to fix\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`) // need to fix\n        setName('')\n    }\n\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && name) {\n            addUser(\n            )\n        }\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onEnter={onEnter}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<any>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const user = {\n            _id: v1(),\n            name,\n        }\n        setUsers([...users, user]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked (e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            {/*<Switch>*/}\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            {/*</Switch>*/}\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Routes/>\n\n            {/*</HashRouter>*/}\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from '../../../p2-homeworks/h4/HW4'\nimport HW5 from '../../../p2-homeworks/h5/HW5'\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}